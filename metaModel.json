{
	"metaData": {
		"version": "3.17.0"
	},
	"requests": [
		{
			"method": "textDocument/documentSymbol",
			"typeName": "DocumentSymbolRequest",
			"result": {
				"kind": "or",
				"items": [
					{
						"kind": "array",
						"element": {
							"kind": "reference",
							"name": "SymbolInformation"
						}
					},
					{
						"kind": "array",
						"element": {
							"kind": "reference",
							"name": "DocumentSymbol"
						}
					},
					{
						"kind": "base",
						"name": "null"
					}
				]
			},
			"messageDirection": "clientToServer",
			"clientCapability": "textDocument.documentSymbol",
			"serverCapability": "documentSymbolProvider",
			"params": {
				"kind": "reference",
				"name": "DocumentSymbolParams"
			},
			"partialResult": {
				"kind": "or",
				"items": [
					{
						"kind": "array",
						"element": {
							"kind": "reference",
							"name": "SymbolInformation"
						}
					},
					{
						"kind": "array",
						"element": {
							"kind": "reference",
							"name": "DocumentSymbol"
						}
					}
				]
			},
			"registrationOptions": {
				"kind": "reference",
				"name": "DocumentSymbolRegistrationOptions"
			},
			"documentation": "A request to list all symbols found in a given text document. The request's\nparameter is of type {@link TextDocumentIdentifier} the\nresponse is of type {@link SymbolInformation SymbolInformation[]} or a Thenable\nthat resolves to such."
		}
	],
	"notifications": [
	],
	"structures": [
		{
			"name": "DocumentSymbolRegistrationOptions",
			"properties": [],
			"extends": [
				{
					"kind": "reference",
					"name": "TextDocumentRegistrationOptions"
				},
				{
					"kind": "reference",
					"name": "DocumentSymbolOptions"
				}
			],
			"documentation": "Registration options for a {@link DocumentSymbolRequest}."
		},
		{
			"name": "DocumentSymbol",
			"properties": [
				{
					"name": "name",
					"type": {
						"kind": "base",
						"name": "string"
					},
					"documentation": "The name of this symbol. Will be displayed in the user interface and therefore must not be\nan empty string or a string only consisting of white spaces."
				},
				{
					"name": "detail",
					"type": {
						"kind": "base",
						"name": "string"
					},
					"optional": true,
					"documentation": "More detail for this symbol, e.g the signature of a function."
				},
				{
					"name": "kind",
					"type": {
						"kind": "reference",
						"name": "SymbolKind"
					},
					"documentation": "The kind of this symbol."
				},
				{
					"name": "tags",
					"type": {
						"kind": "array",
						"element": {
							"kind": "reference",
							"name": "SymbolTag"
						}
					},
					"optional": true,
					"documentation": "Tags for this document symbol.\n\n@since 3.16.0",
					"since": "3.16.0"
				},
				{
					"name": "deprecated",
					"type": {
						"kind": "base",
						"name": "boolean"
					},
					"optional": true,
					"documentation": "Indicates if this symbol is deprecated.\n\n@deprecated Use tags instead",
					"deprecated": "Use tags instead"
				},
				{
					"name": "range",
					"type": {
						"kind": "reference",
						"name": "Range"
					},
					"documentation": "The range enclosing this symbol not including leading/trailing whitespace but everything else\nlike comments. This information is typically used to determine if the clients cursor is\ninside the symbol to reveal in the symbol in the UI."
				},
				{
					"name": "selectionRange",
					"type": {
						"kind": "reference",
						"name": "Range"
					},
					"documentation": "The range that should be selected and revealed when this symbol is being picked, e.g the name of a function.\nMust be contained by the `range`."
				},
				{
					"name": "children",
					"type": {
						"kind": "array",
						"element": {
							"kind": "reference",
							"name": "DocumentSymbol"
						}
					},
					"optional": true,
					"documentation": "Children of this symbol, e.g. properties of a class."
				}
			],
			"documentation": "Represents programming constructs like variables, classes, interfaces etc.\nthat appear in a document. Document symbols can be hierarchical and they\nhave two ranges: one that encloses its definition and one that points to\nits most interesting range, e.g. the range of an identifier."
		},
		{
			"name": "SymbolInformation",
			"properties": [
				{
					"name": "deprecated",
					"type": {
						"kind": "base",
						"name": "boolean"
					},
					"optional": true,
					"documentation": "Indicates if this symbol is deprecated.\n\n@deprecated Use tags instead",
					"deprecated": "Use tags instead"
				},
				{
					"name": "location",
					"type": {
						"kind": "reference",
						"name": "Location"
					},
					"documentation": "The location of this symbol. The location's range is used by a tool\nto reveal the location in the editor. If the symbol is selected in the\ntool the range's start information is used to position the cursor. So\nthe range usually spans more than the actual symbol's name and does\nnormally include things like visibility modifiers.\n\nThe range doesn't have to denote a node range in the sense of an abstract\nsyntax tree. It can therefore not be used to re-construct a hierarchy of\nthe symbols."
				}
			],
			"extends": [
				{
					"kind": "reference",
					"name": "BaseSymbolInformation"
				}
			],
			"documentation": "Represents information about programming constructs like variables, classes,\ninterfaces etc."
		},
		{
			"name": "DocumentSymbolParams",
			"properties": [
				{
					"name": "textDocument",
					"type": {
						"kind": "reference",
						"name": "TextDocumentIdentifier"
					},
					"documentation": "The text document."
				}
			],
			"mixins": [
				{
					"kind": "reference",
					"name": "WorkDoneProgressParams"
				},
				{
					"kind": "reference",
					"name": "PartialResultParams"
				}
			],
			"documentation": "Parameters for a {@link DocumentSymbolRequest}."
		}
	],
	"enumerations": [],
	"typeAliases": []
}
